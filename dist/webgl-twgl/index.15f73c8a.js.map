{"mappings":"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","sources":["node_modules/chroma-js/chroma.js"],"sourcesContent":["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$n = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$m = type$n;\n\n    var unpack$v = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$m(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$l = type$n;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$l(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$n,\n    \tunpack: unpack$v,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$f = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$k = utils.type;\n    var _input = input$f;\n\n    var Color$A = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$k(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$A.prototype.toString = function toString () {\n        if (type$k(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$A;\n\n    var chroma$i = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$i.Color, [ null ].concat( args) ));\n    };\n\n    chroma$i.Color = Color_1;\n    chroma$i.version = '2.3.0';\n\n    var chroma_1 = chroma$i;\n\n    var unpack$u = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$u(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$t = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$t(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$h = chroma_1;\n    var Color$z = Color_1;\n    var input$e = input$f;\n    var unpack$s = utils.unpack;\n    var type$j = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$z.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$h.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$e.format.cmyk = cmyk2rgb_1;\n\n    input$e.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$s(args, 'cmyk');\n            if (type$j(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$r = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$r(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$q = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$q(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$p = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$p(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$o = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$o(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$d = input$f;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$d.format.named) {\n            try {\n                return input$d.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$g = chroma_1;\n    var Color$y = Color_1;\n    var input$c = input$f;\n    var type$i = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$y.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$g.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['css']) ));\n    };\n\n    input$c.format.css = css2rgb;\n\n    input$c.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$x = Color_1;\n    var chroma$f = chroma_1;\n    var input$b = input$f;\n    var unpack$n = utils.unpack;\n\n    input$b.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$n(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$f.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$x.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$m = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$m(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$l = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$l(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$k = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$w = Color_1;\n    var input$a = input$f;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$w.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$e.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$a.format.hcg = hcg2rgb_1;\n\n    input$a.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$k(args, 'hcg');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$j = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$j(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$d = chroma_1;\n    var Color$v = Color_1;\n    var type$g = utils.type;\n    var input$9 = input$f;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$v.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$d.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$9.format.hex = hex2rgb_1;\n    input$9.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$g(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$i = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$i(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$h = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$h(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$g = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$u = Color_1;\n    var input$8 = input$f;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$u.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$c.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$8.format.hsi = hsi2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$g(args, 'hsi');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$t = Color_1;\n    var input$7 = input$f;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$t.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$b.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$7.format.hsl = hsl2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'hsl');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$e(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$d = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$d(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$c = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$s = Color_1;\n    var input$6 = input$f;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$s.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$a.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$s, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$6.format.hsv = hsv2rgb_1;\n\n    input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$c(args, 'hsv');\n            if (type$d(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$b = utils.unpack;\n    var pow$8 = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$b(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$8((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$8(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$a = utils.unpack;\n    var pow$7 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$a(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$7(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$9 = utils.unpack;\n    var type$c = utils.type;\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$5 = input$f;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$r.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$9.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$5.format.lab = lab2rgb_1;\n\n    input$5.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, 'lab');\n            if (type$c(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$1;\n\n    var unpack$7 = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$7(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$6 = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$6(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$1;\n\n    var unpack$5 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$5(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$4 = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$4(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$3 = utils.unpack;\n    var type$b = utils.type;\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$4 = input$f;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$q.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$q.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$8.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$8.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$4.format.lch = lch2rgb_1;\n    input$4.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$4.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, m);\n            if (type$b(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$p = Color_1;\n    var input$3 = input$f;\n    var type$a = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$p.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$3.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$3.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$a(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$9 = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$9(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$7 = chroma_1;\n    var Color$o = Color_1;\n    var input$2 = input$f;\n    var type$8 = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$o.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$7.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['num']) ));\n    };\n\n    input$2.format.num = num2rgb_1;\n\n    input$2.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$8(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$6 = chroma_1;\n    var Color$n = Color_1;\n    var input$1 = input$f;\n    var unpack$1 = utils.unpack;\n    var type$7 = utils.type;\n    var round$1 = Math.round;\n\n    Color$n.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$n.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$6.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$1.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$1(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$1(args, 'rgba');\n            if (type$7(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$7(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$5 = chroma_1;\n    var Color$m = Color_1;\n    var input = input$f;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$m.prototype.temp =\n    Color$m.prototype.kelvin =\n    Color$m.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$5.temp =\n    chroma$5.kelvin =\n    chroma$5.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$m, [ null ].concat( args, ['temp']) ));\n    };\n\n    input.format.temp =\n    input.format.kelvin =\n    input.format.temperature = temperature2rgb_1;\n\n    var Color$l = Color_1;\n    var type$6 = utils.type;\n\n    Color$l.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$l([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$k = Color_1;\n\n    Color$k.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$j = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$j.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$j(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$j.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$j.prototype.darker = Color$j.prototype.darken;\n    Color$j.prototype.brighter = Color$j.prototype.brighten;\n\n    var Color$i = Color_1;\n\n    Color$i.prototype.get = function(mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$h = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$h.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$h([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$h([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$h([0,0,0]), this) : test(this, new Color$h([255,255,255]))).rgb();\n            return new Color$h(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$g = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$g(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$g(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$f = Color_1;\n    var mix = mix$1;\n\n    Color$f.prototype.mix =\n    Color$f.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$e = Color_1;\n\n    Color$e.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$e([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$d = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$d.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$d(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$d.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$c = Color_1;\n    var type$3 = utils.type;\n\n    Color$c.prototype.set = function(mc, value, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch(value.charAt(0)) {\n                        case '+': src[i] += +value; break;\n                        case '-': src[i] += +value; break;\n                        case '*': src[i] *= +(value.substr(1)); break;\n                        case '/': src[i] /= +(value.substr(1)); break;\n                        default: src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$c(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$b = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$b(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$a = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$a(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$9 = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$9(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$8 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1-(hue0+360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1+360-hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1-lbv0);\n        return new Color$8([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$4 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$7 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$7(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$n;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","chroma","this","limit$2","x","min","max","limit$1","classToType","i$11","list$1","length","name","toLowerCase","type$n","obj","Object","prototype","toString","call","type$m","type$l","PI$2","Math","PI","utils","clip_rgb","rgb","_clipped","_unclipped","slice","i","limit","type","unpack","args","keyOrder","Array","split","filter","k","undefined","map","last","l","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$f","format","autodetect","last$3","clip_rgb$2","type$k","_input","Color$A","len","arguments","me","constructor","mode","sorted","sort","a","b","p","list","chk","test","apply","Error","_rgb","push","hex","join","Color_1","chroma$i","Function","bind","Color","concat","version","chroma_1","unpack$u","max$2","rgb2cmyk_1","ref","r","g","f","c","m","y","unpack$t","cmyk2rgb_1","alpha","chroma$h","Color$z","input$e","unpack$s","type$j","rgb2cmyk","cmyk","unpack$r","last$2","rnd","round","hsl2css_1","hsla","unpack$q","rgb2hsl_1","s","h","Number","NaN","unpack$p","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css_1","rgba","substr","unpack$o","round$5","hsl2rgb_1","assign","t3","t2","t1","h_","hsl2rgb","input$d","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","trim","named","e","match","rgb$1","i$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","chroma$g","Color$y","input$c","type$i","rgb2css","css2rgb","rest","Color$x","chroma$f","unpack$n","gl","unpack$m","rgb2hcg_1","delta","_g","unpack$l","floor$3","floor","hcg2rgb_1","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","unpack$k","type$h","chroma$e","Color$w","input$a","rgb2hcg","hcg","unpack$j","round$3","rgb2hex_1","u","str","hxa","RE_HEX","RE_HEXA","hex2rgb_1","parseInt","u$1","chroma$d","Color$v","type$g","input$9","rgb2hex$1","indexOf","unpack$i","TWOPI$2","min$2","sqrt$4","sqrt","acos","rgb2hsi_1","min_","unpack$h","TWOPI$1","cos$4","cos","hsi2rgb_1","isNaN","unpack$g","type$f","chroma$c","Color$u","input$8","rgb2hsi","hsi","unpack$f","type$e","chroma$b","Color$t","input$7","rgb2hsl$1","unpack$e","min$1","max$1","rgb2hsv$1","max_","unpack$d","floor$2","hsv2rgb_1","unpack$c","type$d","chroma$a","Color$s","input$6","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$b","pow$8","pow","rgb_xyz","xyz_lab","rgb2xyz","rgb2lab_1","ref$1","z","LAB_CONSTANTS$2","unpack$a","pow$7","xyz_rgb","lab_xyz","lab2rgb_1","unpack$9","type$c","chroma$9","Color$r","input$5","rgb2lab$1","lab","unpack$8","sqrt$3","atan2$2","atan2","round$2","lab2lch_1","unpack$7","rgb2lab","lab2lch","rgb2lch_1","b_","unpack$6","sin$3","sin","cos$3","lch2lab_1","unpack$5","lch2lab","lab2rgb","lch2rgb_1","L","unpack$4","lch2rgb","hcl2rgb_1","hcl","reverse","unpack$3","type$b","chroma$8","Color$q","input$4","rgb2lch","lch","forEach","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","input$3","type$a","w3cx11","hex2rgb","rgb2hex","keys","n","unpack$2","rgb2num_1","type$9","num2rgb_1","num","chroma$7","Color$o","input$2","type$8","rgb2num","chroma$6","Color$n","input$1","unpack$1","type$7","round$1","log$1","log","temperature2rgb_1","kelvin","temp","temperature2rgb","rgb2temperature_1","minTemp","maxTemp","eps","chroma$5","Color$m","input","rgb2temperature","temperature","Color$l","type$6","mutate","clipped","Color$j","LAB_CONSTANTS$1","darken","amount","brighten","darker","brighter","get","mc","channel","src","Color$h","type$5","pow$6","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","abs","rgb2luminance","luminance_x","interpolator$1","Color$g","type$4","interpolator","mix$1","col1","col2","Color$f","mix","Color$e","premultiply","Color$d","LAB_CONSTANTS","saturate","desaturate","Color$c","type$3","set","value","charAt","out","Color$b","xyz0","xyz1","Color$a","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$9","Color$8","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","interpolate_hsx$4","lch1","Color$7","c1","c2","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","_average_lrgb","colors","weights","xyz","col","chroma$4","type$2","pow$3","scale$2","colors1","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","d","analyze","limits","domain","i3","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","__range__","samples","i4","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","Color$5","scale$1","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","Color$4","floor$1","random","pow$1","abs$1","data","key","MAX_VALUE","sum","values","count","limits1","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","Color$2","min1","max1","exp","Color$1","chroma$1","scale","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","i1","list1","key1","colorbrewer_1","average","reduce","w","first","shift","cnt","dx","dy","i2","A","ci","xyz2","A$1","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","row","newrow","binom_row","el","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","code","contrast","l1","l2","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rt","distance","sum_sq","valid"],"version":3,"file":"index.15f73c8a.js.map"}